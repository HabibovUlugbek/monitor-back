datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  REPUBLIC_BOSS
  REPUBLIC_EMPLOYEE
  REGION_BOSS
  REGION_EMPLOYEE
  REGION_CHECKER_BOSS
  REGION_CHECKER_EMPLOYEE
}

enum LoanStatus {
  PENDING
  APPROVED
  REJECTED
  OUTDATED
}

model Admin {
  id     String  @id @default(dbgenerated("gen_random_uuid()"))
  username String  @unique
  password String
  name   String
  region String?
  bhmCode String? 
  role   Role    @default(REGION_EMPLOYEE)
  notifications Notification[]
  loanHistory   LoanHistory[]
  messages      Message[]
  files File[]

  @@index([region], name: "region_index")

  @@map("admins")
}

model Loan {
  id         String   @id @default(dbgenerated("gen_random_uuid()"))
  codeRegion String
  bhmCode    String 
  externalId String
  borrower   String?
  contractAmountEquvivalent Float?
  amount     Float?
  issuedAt   DateTime?
  inspector  String? 
  remaining  Float?
  totalDebt  Float?
  codeVal    String?

  createdAt  DateTime @default(now())
  history    LoanHistory[]
  notifications Notification[]
  messages      Message[]
  files File[]
  @@map("loans")
}



model LoanHistory {
  id      String   @id @default(dbgenerated("gen_random_uuid()"))
  loan    Loan     @relation(fields: [loanId], references: [id])
  assignee   Admin    @relation(fields: [assigneeId], references: [id])
  assigneeId String
  loanId  String
  status  LoanStatus
  date    DateTime @default(now())

  @@map("loan_histories")
}

model Notification {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  admin     Admin    @relation(fields: [adminId], references: [id])
  loan      Loan     @relation(fields: [loanId], references: [id])
  adminId   String
  loanId  String

  @@map("notifications")
}

model SuperAdmin {
  id       String  @id @default(dbgenerated("gen_random_uuid()"))
  username String  @unique
  password String

  @@map("super_admins")
}

model Message {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  message   String
  createdAt DateTime @default(now())

  loan     Loan     @relation(fields: [loanId], references: [id])
  loanId   String
  admin     Admin?    @relation(fields: [adminId], references: [id])
  adminId   String

  @@map("messages")
}

model File {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  name      String
  pages     String
  path      String
  admin     Admin    @relation(fields: [adminId], references: [id])
  adminId   String

  loan     Loan     @relation(fields: [loanId], references: [id])
  loanId   String
  @@map("file")
}
